[%

# this template takes a single value's args listed in @required below
# and renders an html form widget for this value, so it can be
# modified by user

%]

[% RAWPERL %]

use strict;

use Extropia::Core::Base qw(_rearrange);
my @required = (
        -INPUT_WIDGET_CONFIG,
        -INPUT_WIDGET_DISPLAY_ORDER,
        -CGI_OBJECT,
        -RECORDS,
            );

my $view_obj = $stash->get('view_obj');
my $rh_data  = $view_obj->get_data;
exists $rh_data->{$_} or die "$_ is not set" for @required;

my $input_widget_definitions   = $rh_data->{-INPUT_WIDGET_CONFIG} || {};
my $input_widget_display_order = $rh_data->{-INPUT_WIDGET_DISPLAY_ORDER} || [];
my $cgi                        = $rh_data->{-CGI_OBJECT};
my $rh_record                  = $rh_data->{-RECORDS}->[0];

for (@$input_widget_display_order) {

    my @widgets = ref $_ eq "ARRAY" ? @$_ : $_;
    
    $output .= qq[           <TR>\n];

    for my $widget_name (@widgets) {
        my @values = 
            _rearrange([
                        -DISPLAY_NAME,
                        -TYPE,
                        -DESCRIPTION_CELL_COLSPAN,
                        -INPUT_CELL_COLSPAN,
                       ],
                       [
                        -DISPLAY_NAME,
                        -TYPE,
                       ],
                       @{$input_widget_definitions->{$widget_name}||[]}
                      );

        my $display_name             = shift @values || '';
        my $type                     = shift @values || '';
        my $description_cell_colspan = shift @values || "1";
        my $input_cell_colspan       = shift @values || "1";

        my $widget_value = join (",", $cgi->param($widget_name)) || '';
        my $widget_orig_name = "original_$widget_name";
        $cgi->param($widget_orig_name,$widget_value);
        my $hidden_orig_value = join ("\n", $cgi->hidden($widget_orig_name));

        if ($type eq "text") {
            # do nothing
        } elsif ($type eq "checkbox_group" ||
                 $type eq "radio_group" ||
                 $type eq "scrolling_list") {
            my @selected_values = split(",", $rh_record->{$widget_name});
            $widget_value = $cgi->$type(
                                   -DEFAULT => \@selected_values,
                                   @values
                                  );
        } elsif ($type eq "popup_menu") {
            $widget_value = $cgi->$type(
                                   -DEFAULT => $rh_record->{$widget_name},
                                   @values
                                  );
        } elsif ($type eq "checkbox") {
            if ($rh_record->{$widget_name}) {
                $widget_value = $cgi->$type(
                                       -CHECKED => '1',
                                       @values
                                      );
            } else {
                $widget_value = $cgi->$type(
                                       @values
                                      );
            }
        } else {
            $widget_value = $cgi->$type(
                                   -DEFAULT => $rh_record->{$widget_name},
                                   @values
                                  );
        }

           $output .= qq[
                <TH CLASS = "tableRowHeaderStyle"
                    COLSPAN = "$description_cell_colspan">
                $display_name
                </TH>
            ] if length $display_name;

            $output .= qq[
                <TD CLASS = "tableRowStyle"
                    COLSPAN = "$input_cell_colspan">
                $widget_value
                $hidden_orig_value
                &nbsp;
                </TD>
              ];
    }

    $output .= qq[</TR>\n];
}


[% END %]

